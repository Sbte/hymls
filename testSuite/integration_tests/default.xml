<ParameterList name="Default settings for HYMLS unit tests"><!--{-->

  <!-- these first few settings are specific for the driver -->
  <!-- implemented in 'main.C' and are not passed on to the -->
  <!-- HYMLS solver classes.                                -->
  <ParameterList name="Driver"><!--{-->
  
    <Parameter name="Number of refinements" type="int" value="2"/>

    <!-- will create a series of slightly perturbed matrices -->
    <Parameter name="Number of factorizations" type="int" value="1"/>
    <!-- for each matrix, solve with several right-hand sides in a row -->
    <Parameter name="Number of solves" type="int" value="1"/>
    <!-- number of right-hand sides per solve -->
    <Parameter name="Number of rhs" type="int" value="1"/>

    <!-- type of null space to be deflated (e.g. "Constant", "None", ... -->
    <Parameter name="Null Space Type" type="string" value="None"/>
    
    
  </ParameterList><!--}-->
  
  <ParameterList name="Targets"><!--{-->
    <Parameter name="Number of Iterations" type="int" value="999"/>
    <Parameter name="Relative Residual 2-Norm" type="double" value="5.0e-6"/>
    <Parameter name="Relative Error 2-Norm" type="double" value="5.0e-6"/>
  </ParameterList><!--}-->

  <ParameterList name="Problem"><!--{-->

    <Parameter name="Equations" type="string" value="Laplace"/>
    <Parameter name="Dimension" type="int" value="2"/>

    <Parameter name="nx" type="int" value="32"/>
    <Parameter name="ny" type="int" value="32"/>
    <Parameter name="nz" type="int" value="1"/>
    
  </ParameterList><!--}-->
  
  <ParameterList name="Solver"><!--{-->
  
    <!-- "CG", "GMRES", "PCPG" (only GMRES actually supported by our solver right now) -->
    <Parameter name="Krylov Method" type="string" value="GMRES"/>
    
    <!-- vector to start the Krylov sequence: "Zero", "Random", "Previous" -->
    <Parameter name="Initial Vector" type="string" value="Zero"/>
    
    <!-- apply preconditioning from left or right (if Krylov Method!="None") -->
    <Parameter name="Left or Right Preconditioning" type="string" value="Left"/>

    <!-- parameters for the iterative solver (Belos) -->
    <ParameterList name="Iterative Solver">
      <Parameter name="Maximum Iterations" type="int" value="100"/>
      <!--Parameter name="Block Size" type="int" value="1"/-->
      <Parameter name="Convergence Tolerance" type="double" value="1.0e-6"/>
      <Parameter name="Output Frequency" type="int" value="1"/>
      <Parameter name="Show Maximum Residual Norm Only" type="bool" value="1"/>
    </ParameterList>
  </ParameterList><!--}-->

  <ParameterList name="Preconditioner"><!--{-->
    
    <Parameter name="Partitioner" type="string" value="Cartesian"/>
    <Parameter name="Classifier" type="string" value="Standard"/>

    <Parameter name="Visualize Solver" type="bool" value="0"/>
        
    <Parameter name="Preconditioner Variant" type="string" value="Block Diagonal"/>
        
    <!-- you can either set 'Separator Length' or 'Number of Subdomains' -->
    <Parameter name="Separator Length" type="int" value="4"/>
    
    <!-- number of levels to be created (1: direct solver for Schur complement, -->
    <!-- 2: solve Schur iteratively and reduced Schur directly,                 -->
    <!-- >2: not implemented.                                                   -->
    <Parameter name="Number of Levels" type="int" value="2"/>
    
    <Parameter name="Scale Schur-Complement" type="bool" value="0"/>

    <!-- parameters for the direct solvers (Ifpack_Amesos) -->

    <!-- you can either make direct solver settings in a single list            -->
    <!-- called "Direct Solver" or in separate lists for each level, like this: -->
 
    <!-- settings for subdomain solver -->
    <ParameterList name="Sparse Solver">
      <!-- "Klu" is the default here. These systems are always sequential -->
      <Parameter name="amesos: solver type" type="string" value="KLU"/>
      <Parameter name="Custom Ordering" type="bool" value="0"/>
      <Parameter name="Custom Scaling" type="bool" value="0"/>
    </ParameterList>

    <!-- settings for reduced problem (Vsum) solver -->
    <ParameterList name="Coarse Solver">
      <!-- "Amesos_Klu" is the default here. This system is distributed, and  -->
      <!-- it may be worthwile using Amesos_Mumps, for instance.              -->
      <Parameter name="amesos: solver type" type="string" value="Amesos_Klu"/>
      <!--Parameter name="MaxProcs" type="int" value="4"/-->
      <Parameter name="OutputLevel" type="int" value="0"/>
      <Parameter name="PrintTiming" type="bool" value="0"/>
      <Parameter name="PrintStatus" type="bool" value="0"/>
      <ParameterList name="Superludist">
        <Parameter name="PrintNonzeros" type="bool" value="0"/>
      </ParameterList>
      <ParameterList name="mumps">
        <!-- output stream: stdout=6, none=-1 -->
        <Parameter name="ICNTL(1)" type="int" value="6"/>
        <!-- error stream: stdout=6, none=-1 -->
        <Parameter name="ICNTL(2)" type="int" value="6"/>
        <!-- global info stream: stdout=6, none=-1 -->
        <Parameter name="ICNTL(3)" type="int" value="6"/>
        <!-- verbosity (-1..3) -->
        <Parameter name="ICNTL(4)" type="int" value="3"/>
        <!-- collect statistics (for optimal performance set it to 0!) -->
        <Parameter name="ICNTL(11)" type="int" value="0"/>
      </ParameterList>      
    </ParameterList>
  </ParameterList><!--}-->
  
  
</ParameterList><!--}-->
